{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/everymundo/src/components/Common/Direction.js\";\nimport React from \"react\";\nimport Downshift from \"downshift\";\n\nvar Direction = function Direction(_ref) {\n  var items = _ref.items,\n      from = _ref.from,\n      to = _ref.to,\n      onChangeInput = _ref.onChangeInput;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"plane-block plane-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }), React.createElement(Downshift, {\n    itemToString: function itemToString(item) {\n      return item ? \"\".concat(item.description, \" (\").concat(item.name, \")\") : \"\";\n    },\n    defaultSelectedItem: from,\n    onSelect: function onSelect(item) {\n      onChangeInput(\"from\", item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, function (_ref2) {\n    var getInputProps = _ref2.getInputProps,\n        getItemProps = _ref2.getItemProps,\n        getMenuProps = _ref2.getMenuProps,\n        isOpen = _ref2.isOpen,\n        inputValue = _ref2.inputValue,\n        highlightedIndex = _ref2.highlightedIndex,\n        selectedItem = _ref2.selectedItem;\n    return React.createElement(\"div\", {\n      className: \"relative w-1/2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({\n      type: \"text\",\n      placeholder: \"From\",\n      className: \"text-sm input right-none border w-full\"\n    }, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), React.createElement(\"ul\", Object.assign({\n      className: \"z-30 absolute list-reset\"\n    }, getMenuProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), isOpen ? items.filter(function (item) {\n      return !inputValue || item.description.includes(inputValue);\n    }).map(function (item, index) {\n      return React.createElement(\"li\", Object.assign({\n        className: \"text-sm px-2 py-4 bg-white\"\n      }, getItemProps({\n        key: item.name,\n        index: index,\n        item: item,\n        style: {\n          backgroundColor: highlightedIndex === index ? \"lightgray\" : \"white\",\n          fontWeight: selectedItem === item ? \"bold\" : \"normal\"\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, item.description, \" \"), React.createElement(\"span\", {\n        className: \"text-xs font-bold text-white bg-darkGray rounded p-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, item.name));\n    }) : null));\n  }), React.createElement(Downshift, {\n    onSelect: function onSelect(item) {\n      onChangeInput(\"to\", item);\n    },\n    defaultSelectedItem: to,\n    itemToString: function itemToString(item) {\n      return item ? \"\".concat(item.description, \" (\").concat(item.name, \")\") : \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, function (_ref3) {\n    var getInputProps = _ref3.getInputProps,\n        getItemProps = _ref3.getItemProps,\n        getMenuProps = _ref3.getMenuProps,\n        isOpen = _ref3.isOpen,\n        inputValue = _ref3.inputValue,\n        highlightedIndex = _ref3.highlightedIndex,\n        selectedItem = _ref3.selectedItem;\n    return React.createElement(\"div\", {\n      className: \"relative w-1/2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({\n      type: \"text\",\n      placeholder: \"To\",\n      className: \"text-sm input border w-full\"\n    }, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"ul\", Object.assign({\n      className: \"z-30 absolute list-reset\"\n    }, getMenuProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), isOpen ? items.filter(function (item) {\n      return !inputValue || item.description.includes(inputValue);\n    }).map(function (item, index) {\n      return React.createElement(\"li\", Object.assign({\n        className: \"text-sm px-2 py-4 bg-white\"\n      }, getItemProps({\n        key: item.name,\n        index: index,\n        item: item,\n        style: {\n          backgroundColor: highlightedIndex === index ? \"lightgray\" : \"white\",\n          fontWeight: selectedItem === item ? \"bold\" : \"normal\"\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, item.description, \" \"), React.createElement(\"span\", {\n        className: \"text-xs font-bold text-white bg-darkGray rounded p-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, item.name));\n    }) : null));\n  }));\n};\n\nexport default Direction;","map":{"version":3,"sources":["/Users/usuario/everymundo/src/components/Common/Direction.js"],"names":["React","Downshift","Direction","items","from","to","onChangeInput","item","description","name","getInputProps","getItemProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","filter","includes","map","index","key","style","backgroundColor","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Downshift from \"downshift\";\n\nconst Direction = ({ items, from, to, onChangeInput }) => (\n  <React.Fragment>\n    <span className=\"plane-block plane-input\" />\n    <Downshift\n      itemToString={item => (item ? `${item.description} (${item.name})` : \"\")}\n      defaultSelectedItem={from}\n      onSelect={item => {\n        onChangeInput(\"from\", item);\n      }}\n    >\n      {({\n        getInputProps,\n        getItemProps,\n        getMenuProps,\n        isOpen,\n        inputValue,\n        highlightedIndex,\n        selectedItem\n      }) => (\n        <div className=\"relative w-1/2\">\n          <input\n            type=\"text\"\n            placeholder=\"From\"\n            className=\"text-sm input right-none border w-full\"\n            {...getInputProps()}\n          />\n          <ul className=\"z-30 absolute list-reset\" {...getMenuProps()}>\n            {isOpen\n              ? items\n                  .filter(\n                    item => !inputValue || item.description.includes(inputValue)\n                  )\n                  .map((item, index) => (\n                    <li\n                      className=\"text-sm px-2 py-4 bg-white\"\n                      {...getItemProps({\n                        key: item.name,\n                        index,\n                        item,\n                        style: {\n                          backgroundColor:\n                            highlightedIndex === index ? \"lightgray\" : \"white\",\n                          fontWeight: selectedItem === item ? \"bold\" : \"normal\"\n                        }\n                      })}\n                    >\n                      <span>{item.description} </span>\n                      <span className=\"text-xs font-bold text-white bg-darkGray rounded p-1\">\n                        {item.name}\n                      </span>\n                    </li>\n                  ))\n              : null}\n          </ul>\n        </div>\n      )}\n    </Downshift>\n\n    <Downshift\n      onSelect={item => {\n        onChangeInput(\"to\", item);\n      }}\n      defaultSelectedItem={to}\n      itemToString={item => (item ? `${item.description} (${item.name})` : \"\")}\n    >\n      {({\n        getInputProps,\n        getItemProps,\n        getMenuProps,\n        isOpen,\n        inputValue,\n        highlightedIndex,\n        selectedItem\n      }) => (\n        <div className=\"relative w-1/2\">\n          <input\n            type=\"text\"\n            placeholder=\"To\"\n            className=\"text-sm input border w-full\"\n            {...getInputProps()}\n          />\n          <ul className=\"z-30 absolute list-reset\" {...getMenuProps()}>\n            {isOpen\n              ? items\n                  .filter(\n                    item => !inputValue || item.description.includes(inputValue)\n                  )\n                  .map((item, index) => (\n                    <li\n                      className=\"text-sm px-2 py-4 bg-white\"\n                      {...getItemProps({\n                        key: item.name,\n                        index,\n                        item,\n                        style: {\n                          backgroundColor:\n                            highlightedIndex === index ? \"lightgray\" : \"white\",\n                          fontWeight: selectedItem === item ? \"bold\" : \"normal\"\n                        }\n                      })}\n                    >\n                      <span>{item.description} </span>\n                      <span className=\"text-xs font-bold text-white bg-darkGray rounded p-1\">\n                        {item.name}\n                      </span>\n                    </li>\n                  ))\n              : null}\n          </ul>\n        </div>\n      )}\n    </Downshift>\n  </React.Fragment>\n);\n\nexport default Direction;\n"]},"metadata":{},"sourceType":"module"}